
// PRIVATE
		readonly IUserDataService userDataService;
		ObservableCollection<UserTable> userEntries;



// PROP
		public ObservableCollection<UserTable> UserEntries
		{
			get => this.userEntries;
			set
			{
				this.userEntries = value;
				OnPropertyChanged ();
			}
		}




// CON
		this.userDataService = new UserApiDataService (new Uri ("https://evenstreaminfunctionapp.azurewebsites.net"));
		this.UserEntries = new ObservableCollection<UserTable> ();
		this.LoadEntries



// LOADS


		/// <summary>
		/// Calls the API and loads the returned data into a member variable
		/// </summary>
		private async Task LoadEntries ()
		{
			try
			{
				var entries = await userDataService.GetEntriesAsync ();
				this.UserEntries = new ObservableCollection<UserTable> (entries);
			}
			catch (Exception ex)
			{
				Debug.WriteLine ("Loading Accounts Failed");
				Debug.WriteLine (ex.Message);
				await Application.Current.MainPage.Navigation.PopAsync ();
			}
		}




// EXTRA


		UserTable newUser = new UserTable ()
		{
			UserName = this.UserName,
			Password = this.Password,
			FirstName = this.FirstName,
			LastName = this.LastName,
			Email = this.Email
		};

		await this.userDataService.AddEntryAsync (newUser);
		await Application.Current.MainPage.Navigation.PopModalAsync ();




		foreach (UserTable user in this.UserEntries)
		{
			if (user.UID == App.UserID)
			{
				this.User = user;
				count++;
			}
		}

		// If query fails then pop this page off the stack
		if (count != 1)
		{
			Debug.WriteLine ("Finding Current User Failed");
			await Application.Current.MainPage.Navigation.PopAsync ();
		}